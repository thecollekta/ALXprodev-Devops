#!/bin/bash

# Create directory for storing Pokémon data
mkdir -p pokemon_data

# List of Pokémon to fetch
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to fetch Pokémon data
fetch_pokemon() {
    local pokemon=$1
    echo "Fetching data for $pokemon..."
    
    # Make API request with error handling
    curl -s -S --fail "https://pokeapi.co/api/v2/pokemon/$pokemon" -o "pokemon_data/$pokemon.json" 2> "pokemon_data/${pokemon}_error.txt"
    
    # Check if request succeeded
    if [ $? -eq 0 ]; then
        echo "Saved data to pokemon_data/$pokemon.json ✅"
    else
        echo "Error fetching $pokemon data" >&2
    fi
}

# Launch all requests in parallel
for pokemon in "${pokemon_list[@]}"; do
    fetch_pokemon "$pokemon" &
done

# Use jobs to monitor background processes
while true; do
    # Get active job count
    active_jobs=$(jobs -r | wc -l)
    
    # Exit loop when no jobs left
    if [ "$active_jobs" -eq 0 ]; then
        break
    fi
    
    # Check for hung processes using kill -0
    for pid in $(jobs -p); do
        # Use kill -0 to check if process exists
        if ! kill -0 $pid 2>/dev/null; then
            echo "Process $pid not found - removing from tracking"
        fi
    done
    
    # Wait a bit before checking again
    sleep 0.5
done

echo "All Pokémon data fetched successfully!"
